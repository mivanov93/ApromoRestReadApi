#app:
#    resource: "@AppBundle/Controller/"
#    type:     annotation

index:
    path: /
    defaults: { _controller: AppBundle:Default:restIndex }

fb_index:
    path:     /fb
    defaults: { _controller: AppBundle:Facebook:index }
    
fb_index2:
    path:     /fb/
    defaults: { _controller: AppBundle:Facebook:index }
    
fb_partners:
    path:     /fb/partners
    defaults: { _controller: AppBundle:Facebook:partners }
    
fb_by_brand:
    path:     /fb/magazini/{brandId}/{brandName}/{page}
    defaults: { _controller: AppBundle:Facebook:brandByBrandId, page: 1, brandName: "placeholder" }
    requirements:
        brandName: "[a-zA-Z0-9-_.]+"
        brandId:  \d+
        methods: GET
    
fb_by_prodcat:
    path:     /fb/{prodcatName}-{prodcatId}
    defaults: { _controller: AppBundle:Facebook:productsByProdcat}
    requirements:
        prodcatName: "[a-zA-Z0-9-_]+"
        prodcatId:  \d+
        methods: GET
    
fb_prod_details:
    path:     /fb/{prodcatName}-{prodcatId}/{prodName}-{prodId}
    defaults: { _controller: AppBundle:Facebook:productDetailsById}
    requirements:
        prodcatName: "[a-zA-Z0-9-_]+"
        prodName: "[a-zA-Z0-9-_]+"
        prodId:  \d+
        prodcatId:  \d+
        methods: GET

products_by_id:
    path:     /products/{prodId}
    defaults: { _controller: AppBundle:Products:details}
    requirements:
        prodId:  \d+
        methods: GET
        
products_suggest_by_id:
    path:     /products/suggest/{limit}/{prodId}
    defaults: { _controller: AppBundle:Products:suggest}
    requirements:
        limit: \d{1,2}
        prodId:  \d+
        methods: GET

products_top:
    path:     /products/by-top/{prodcatId}/{page}/{perPage}/{topOnly}
    defaults: { _controller: AppBundle:Products:byTop, prodcatId: 0, page: 1, perPage: 24, topOnly: 0 }
    requirements:
        topOnly:  0|1
        perPage:  \d{1,2}
        page:       \d+
        prodcatId:  \d+
        methods: GET
        
products_random_top:
    path:     /products/random-top/{limit}/{prodcatId}
    defaults: { _controller: AppBundle:Products:randomTop, limit: 24, prodcatId: 0 }
    requirements:
        limit:  \d{1,2}
        prodcatId:  \d+
        methods: GET
        
products_random_brand:
    path:     /products/random-brand/{limit}/{brandId}
    defaults: { _controller: AppBundle:Products:randomBrand, limit: 12}
    requirements:
        limit:  \d{1,2}
        brandId:  \d+
        methods: GET
        
products_random_prodcat:
    path:     /products/random-prodcat/{limit}/{prodcatId}
    defaults: { _controller: AppBundle:Products:randomProdcat, limit: 24, prodcatId: 0 }
    requirements:
        limit:  \d{1,2}
        prodcatId:  \d+
        methods: GET
        
products_by_ids:
    path:     /products/by-ids/{prodIds}
    defaults: { _controller: AppBundle:Products:byIds}
    requirements:
        #prodIds:  [\d,]+
        methods: GET
        
products_search:
    path:     /products/search/{prodcatId}/{order}/{orderDir}/{page}/{perPage}/{topOnly}/{promoOnly}/{nameOnly}
    defaults: { _controller: AppBundle:Products:search,prodcatId: 0, order: "modified", orderDir: "DESC", page: 1, perPage: 12, topOnly: 0, promoOnly: 0, nameOnly: 0}
    requirements:
        order: prodLastmodified|prodNewprice|prodAddtime|poRand|prodName|prodPercentage
        topOnly: 0|1
        orderDir: ASC|DESC|asc|desc
        perPage: \d{1,2}
        page:  \d+
        prodcatId:  \d+
        methods: GET
        
products_by_brand_id:
    path:     /products/by-brand/{brandId}/{page}/{perPage}
    defaults: { _controller: AppBundle:Products:byBrand, page: 1, perPage: 12}
    requirements:
        brandId:  \d+
        page:  \d+
        perPage: \d{1,2}
        methods: GET
        
products_by_prodcat_id:
    path:     /products/by-prodcat/{prodcatId}/{page}/{perPage}
    defaults: { _controller: AppBundle:Products:byProdcat, page: 1, perPage: 12}
    requirements:
        prodcatId:  \d+
        page:  \d+
        perPage:  \d{1,2}
        methods: GET

brands:
    path:     /brands
    defaults: { _controller: AppBundle:Brands:index}
    requirements:
        methods: GET
        
brands_by_id:
    path:     /brands/{brandId}
    defaults: { _controller: AppBundle:Brands:details}
    requirements:
        brandId:  \d+
        methods: GET
        
cities:
    path:     /cities
    defaults: { _controller: AppBundle:Cities:index}
    requirements:
        methods: GET
        
prodcat:
    path:     /prodcat
    defaults: { _controller: AppBundle:Prodcat:index}
    requirements:
        methods: GET
        
prodcat_search:
    path:     /prodcat/index-by-prod-search/{topOnly}
    defaults: { _controller: AppBundle:Prodcat:indexByProdSearch, topOnly: 0}
    requirements:
        topOnly: 0|1
        methods: GET
        
shops:
    path:     /shops
    defaults: { _controller: AppBundle:Shops:index}
    requirements:
        methods: GET
        
shops_by_city_brand:
    path:     /shops/by-city/{cityId}/{brandId}
    defaults: { _controller: AppBundle:Shops:byCityBrand, brandId: 0}
    requirements:
        cityId:  \d+
        brandId: \d+
        methods: GET
#        
#two_perf:
#     path: /twoperf
#     defaults: { _controller: AppBundle:TwoPerformant:test} 